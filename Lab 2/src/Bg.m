clear;
delta = DTS(0 : 19, [1 zeros(1, 19)]);
step = DTS(0 : 19, ones(1, 20));
s1 = step.filter([1], [1 -0.6]);
s2 = step;
for i = 2 : 20
    s2.value(i) = 0.6 ^ (i - 1) * s2.value(i - 1) + s2.value(i);
end
h1 = delta.filter([1], [1 -0.6]);
n = DTS(0 : 19, 0 : 19);
h2 = 0.6 .^ (n .* (n + 1) ./ 2);
z1 = h1 * step; z1 = z1.cut(0 : 19);
z2 = h2 * step; z2 = z2.cut(0 : 19);
figure(1);
DTS.Figures("v", ...
    struct("xlabel", "n", "ylabel", "s_1[n] & z_1[n]", "grid", "on", "xlim", [0 19]), ...
    { s1.sInf("s_1[n]"), z1.sInf("z_1[n]") } ...
);
figure(2);
DTS.Figures("v", ...
    struct("xlabel", "n", "ylabel", "s[n]", "grid", "on", "xlim", [0 19]), ...
    { s2.sInf("s_2[n]") }, ...
    struct("xlabel", "n", "ylabel", "z[n]", "grid", "on", "xlim", [0 19]), ...
    { z2.sInf("z_2[n]") } ...
);
